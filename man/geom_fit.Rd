% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_fit.R
\name{geom_fit}
\alias{geom_fit}
\title{Model Prediction Layers for ggplot2}
\usage{
geom_fit(
  model,
  newdata = NA,
  resolution = 500,
  color = "blue",
  interval = "confidence",
  trans = identity,
  se = TRUE
)
}
\arguments{
\item{model}{A linear model (lm()) to create a line from using predict(). The function attempts to automatically extract the primary predictor (x) variable from the model object.}

\item{newdata}{An optional data frame containing values for other predictor variables in the model (if any) to be held constant during prediction. If \code{NA} (default), predictions are made only based on the primary predictor sequence. Note: The current internal implementation uses \code{cbind}, ensure \code{newdata} is structured appropriately (e.g., a single row data frame with the constant values).}

\item{resolution}{An integer specifying the number of points across the range of the primary predictor (x) at which to evaluate the model. Default is 500.}

\item{color}{A character string specifying the color for the resultant line and ribbon. Default is "blue".}

\item{interval}{A character string specifying the type of interval required: "confidence" (default) or "prediction". Passed to \code{predict()}.}

\item{trans}{A function to transform the predicted values and interval bounds (e.g., \code{exp} for log-transformed response models). Default is \code{identity} (no transformation).}

\item{se}{Removes confidence band if specified FALSE (similar to geom_smooth). Defaults to TRUE}
}
\value{
A list containing two ggplot2 layer objects: a \code{geom_ribbon} for the interval and a \code{geom_line} for the fitted values.
}
\description{
Creates prediction or confidence interval ribbons and a line of best fit based on a statistical model, attempting to mimic geom_smooth, but with finer controls specific to a provided linear model.
This function uses \code{predict()} to generate values across the range of the primary predictor
variable found in the model. It allows for specifying the type of interval ('confidence' or 'prediction'),
applying a transformation function to the predictions and intervals, and providing additional
predictor values via the \code{newdata} argument. It returns ggplot2 layers suitable for adding to an existing plot.
Note: Assumes the model has a structure where the primary predictor can be inferred as the first variable in the model (i.e. beta 1). This must be your x variable.
}
\examples{
\dontrun{
library(ggplot2)

# Example dataset with two predictors
set.seed(123)
df <- data.frame(
  x = 1:20,
  group = factor(rep(c("A", "B"), each = 10)),
  y = 0.5 * (1:20) + ifelse(rep(c("A", "B"), each = 10) == "B", 5, 0) + rnorm(20)
)

# Fit a linear model
fit <- lm(y ~ x + group, data = df)

# Base plot
p <- ggplot(df, aes(x = x, y = y, color = group))

# Add prediction lines and confidence intervals for each group
# Note: geom_fit varies 'x', holds 'group' constant via 'newdata'
p +
  geom_fit(fit, newdata = data.frame(group = "A"), color = "red") +
  geom_fit(fit, newdata = data.frame(group = "B"), color = "blue", interval = "prediction")

# Example with log transformation
df_log <- data.frame(x = 1:10, y = exp(0.5 + 0.2*(1:10) + rnorm(10, sd = 0.1)))
fit_log <- lm(log(y) ~ x, data = df_log)
ggplot(df_log, aes(x = x, y = y)) +
 geom_point() +
 geom_fit(fit_log, trans = exp, color = "purple")
}
}
